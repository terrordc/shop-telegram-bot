# callbacks/user/reviews.py

from aiogram import types
from aiogram.dispatcher import FSMContext
import asyncio
import models
import constants
from states import LeaveReview

async def execute(callback_query: types.CallbackQuery, user: models.users.User, data: dict, message: types.Message = None, state: FSMContext = None) -> None:
    
    user_orders = await models.orders.get_orders_by_user(user.id)
    
    orders_text_list = []
    if user_orders:
        for order in user_orders:
            order_id = order.id
            date_created, items = await asyncio.gather(
                order.date_created,
                order.items
            )
            item_name = items[0].title if items else "–¢–æ–≤–∞—Ä"
            
            # --- START OF FIX ---
            # Format the entire line inside a <code> tag for clean, monospaced formatting.
            # Only the /<order_id> part will be blue and clickable.
            order_line = f"–ó–∞–∫–∞–∑ /{order_id} - {item_name} –æ—Ç {date_created}"
            orders_text_list.append(f"<code>{order_line}</code>")
            # --- END OF FIX ---
    
    orders_text = "\n".join(orders_text_list)
    
    if not user_orders:
        final_text = f"{constants.language.no_orders_for_review}\n\n{constants.language.review_footer}"
    else:
        # We need to wrap the header and footer text to match the screenshot's style.
        final_text = (
            f"‚ùóÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∑–∞–∫–∞–∑–µ –∏–ª–∏ —Ç–æ–≤–∞—Ä–µ - –ø—Ä–æ—Å—Ç–æ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏ –Ω–æ–º–µ—Ä —ç—Ç–æ–≥–æ –∑–∞–∫–∞–∑–∞\n"
            f"‚ûñ‚ûñ\n"
            f"üçï –°–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤:\n"
            f"‚ûñ‚ûñ\n"
            f"{orders_text}\n"
            f"‚ûñ‚ûñ\n"
            f"‚ùóÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ—Å—Ç–æ –æ–±—â–∏–π –æ—Ç–∑—ã–≤, –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –í–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏\n\n"
            f"–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /start"
        )

    # Set the initial state for the review process
    await LeaveReview.waiting_for_input.set()
    
    # We MUST use parse_mode="HTML" to render the <code> tags.
    await message.answer(final_text, parse_mode="HTML", disable_web_page_preview=True)